name: Download, Squash, and Package Proton-GE

on:
  workflow_dispatch:

jobs:
  build-proton:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Latest Release URL
        id: get_release_url
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest |
                              jq -r '.assets[] | select(.name | endswith(".tar.gz")) | select(.name | contains("Source code") | not ) | .browser_download_url')
          echo "::set-output name=url::$LATEST_RELEASE_URL"

      - name: Download Release
        id: download_release
        run: |
          RELEASE_URL="${{ steps.get_release_url.outputs.url }}"
          RELEASE_FILENAME=$(basename "$RELEASE_URL")
          echo "Downloading $RELEASE_FILENAME from $RELEASE_URL"
          curl -L "$RELEASE_URL" -o "$RELEASE_FILENAME"
          echo "::set-output name=filename::$RELEASE_FILENAME"


      - name: Extract Release
        id: extract_release
        run: |
          RELEASE_FILENAME="${{ steps.download_release.outputs.filename }}"
          EXTRACT_DIR=$(echo "$RELEASE_FILENAME" | sed 's/\.tar\.gz$//') #remove the .tar.gz
          mkdir "$EXTRACT_DIR"
          tar -xzf "$RELEASE_FILENAME" -C "$EXTRACT_DIR"
          echo "::set-output name=extracted_dir::$EXTRACT_DIR"
      - name: Set Permissions for tools
        run: |
          chmod +x ./tools/mksquashfs
          chmod +x ./tools/mkdwarfs


      - name: SquashFS and Dwarf Packaging
        id: packaging
        run: |
          PROTON_DIR="${{ steps.extract_release.outputs.extracted_dir }}"
          PROTON_SQSH="$PROTON_DIR.sqsh"
          PROTON_DWARF="$PROTON_DIR.dwarf"

          echo "Squashing $PROTON_DIR to $PROTON_SQSH"
          ./tools/mksquashfs "$PROTON_DIR" "$PROTON_SQSH" -b 1048576 -comp xz -Xdict-size 100%

          echo "Creating dwarf file $PROTON_DWARF from $PROTON_DIR"
          ./tools/mkdwarfs -l 9 -S24 -W12 -w4 -B64 -N4 -i "$PROTON_DIR" -o "$PROTON_DWARF"

          echo "::set-output name=sqsh_path::$PROTON_SQSH"
          echo "::set-output name=dwarf_path::$PROTON_DWARF"
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: proton-files
          path: |
            ${{ steps.packaging.outputs.sqsh_path }}
            ${{ steps.packaging.outputs.dwarf_path }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }} # Changed this
        with:
          tag_name: latest
          release_name: Latest Proton-GE Package
          body: |
            This is the latest packaged release of Proton-GE.
          draft: false
          prerelease: false
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }} # Changed this
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ${{ steps.packaging.outputs.sqsh_path }}
            asset_name: ${{ steps.packaging.outputs.sqsh_path }}
            asset_content_type: application/octet-stream
      - name: Upload Release Assets 2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }} # Changed this
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ${{ steps.packaging.outputs.dwarf_path }}
            asset_name: ${{ steps.packaging.outputs.dwarf_path }}
            asset_content_type: application/octet-stream
